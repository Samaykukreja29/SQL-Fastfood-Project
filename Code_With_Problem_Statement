-- INTRO
-- Here I've created a project to solve a some problems for a fast food buisness. Some advanced topics that I've used are shared below :
-- CTE, Subquerries, Window Function, Joins, Aggregate Functions, etc.


select * from order_details LIMIT 10
SELECT * FROM ORDERS LIMIT 10
SELECT * FROM PIZZA_TYPES LIMIT 10
SELECT * FROM PIZZAS LIMIT 10




-- Retrieve the total number of orders placed.
SELECT COUNT(*) FROM ORDERS


-- Calculate the total revenue generated from pizza sales.
SELECT SUM(P.PRICE*OP.QUANTITY) FROM PIZZAS P
JOIN ORDER_DETAILS OP ON P.PIZZA_ID = OP.PIZZA_ID


-- Identify the highest-priced pizza.
SELECT PIZZA_ID, PRICE FROM PIZZAS
ORDER BY PRICE DESC
LIMIT 1


-- Identify the most common pizza size ordered.
SELECT COUNT(SIZE), SIZE FROM PIZZAS P 
JOIN ORDER_DETAILS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY SIZE
ORDER BY COUNT(SIZE) DESC


-- List the top 5 most ordered pizza types along with their quantities.
SELECT PT.NAME, SUM(OD.QUANTITY) AS SUM_TOTAL FROM PIZZA_TYPES PT
JOIN PIZZAS P ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
JOIN ORDER_DETAILS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY PT.NAME
ORDER BY SUM_TOTAL DESC
LIMIT 5




-- find the total quantity of each pizza category ordered.
SELECT PT.CATEGORY AS CATEGORY, SUM(QUANTITY) FROM ORDER_DETAILS OD
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID
JOIN PIZZA_TYPES PT ON PT.PIZZA_TYPE_ID =  P.PIZZA_TYPE_ID
GROUP BY CATEGORY
ORDER BY SUM(QUANTITY) DESC

-- Determine the distribution of orders by hour of the day.
SELECT COUNT(ORDER_ID), EXTRACT(HOUR FROM ORDER_TIME) AS HOURS FROM ORDERS
GROUP BY HOURS
ORDER BY HOURS DESC

-- find the category-wise distribution of pizzas.
SELECT CATEGORY, COUNT(CATEGORY) FROM PIZZA_TYPES
GROUP BY CATEGORY
ORDER BY COUNT(CATEGORY) DESC

-- Group the orders by date and calculate the average number of pizzas ordered per day.
SELECT AVG(QUANT) FROM(
SELECT SUM(OD.QUANTITY) AS QUANT, EXTRACT(DAY FROM O.ORDER_DATE) AS DAY, EXTRACT(MONTH FROM O.ORDER_DATE) AS MONTH FROM ORDER_DETAILS OD
JOIN ORDERS O ON OD.ORDER_ID = O.ORDER_ID
GROUP BY DAY, MONTH
ORDER BY MONTH, DAY
) AS AVERAGE_QUANTITY

-- Determine the top 3 most ordered pizza types based on revenue.
SELECT P.PIZZA_TYPE_ID, SUM(PRICE*QUANTITY) AS REVENUE FROM PIZZAS P
JOIN ORDER_DETAILS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY P.PIZZA_TYPE_ID
ORDER BY REVENUE DESC
LIMIT 3

-- Calculate the percentage contribution of each pizza type to total revenue.
SELECT PT.CATEGORY, (SUM(OD.QUANTITY * P.PRICE)/(SELECT SUM(OD.QUANTITY * P.PRICE) FROM ORDER_DETAILS OD JOIN PIZZAS P ON OD.PIZZA_ID = P.PIZZA_ID))*100 AS REVENUE
FROM PIZZA_TYPES PT
JOIN PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
JOIN ORDER_DETAILS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.CATEGORY
ORDER BY REVENUE DESC


-- Analyze the cumulative revenue generated over time.
SELECT ORDER_DATE, SUM(REVENUE) OVER(ORDER BY ORDER_DATE) AS CUMULATIVE_REVENUE FROM 
(
SELECT O.ORDER_DATE, SUM(P.PRICE * OD.QUANTITY) AS REVENUE FROM ORDERS O
JOIN ORDER_DETAILS OD ON OD.ORDER_ID = O.ORDER_ID
JOIN PIZZAS P ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY O.ORDER_DATE) AS CUMULATIVE_DATA


-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.
SELECT CATEGORY, NAME, REVENUE FROM (
SELECT CATEGORY, NAME, REVENUE, DENSE_RANK() OVER(PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS ABC FROM(
SELECT PT.CATEGORY, PT.NAME, SUM(P.PRICE * OD.QUANTITY) AS REVENUE
FROM PIZZA_TYPES PT
JOIN PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID 
JOIN ORDER_DETAILS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY PT.CATEGORY, PT.NAME
) AS DEF) AS XYZ
WHERE ABC <= 3
